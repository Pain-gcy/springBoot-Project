# Redis Pool Config
redis.maxTotal=8
redis.maxIdle=8
redis.minIdle=1
redis.maxWaitMillis=5000
redis.minEvictableIdleTimeMillis=300000
redis.numTestsPerEvictionRun=3
redis.timeBetweenEvictionRunsMillis=60000
# Redis Sentinel Config
redis.database0=1
redis.clientName=charging_cache
redis.sentinel.masterName=sn_charging_master
redis.sentinel.master=10.29.130.44:26379
redis.sentinel.slave1=10.29.130.45:26379
redis.sentinel.slave2=10.29.130.45:26380
redis.connectionTimeout=1000
redis.soTimeout=2000
redis.password=rEHIMVslxyNmRczB


# druid datasource 配置信息
datasource.url=jdbc:mysql://10.29.130.240:3306/apollo_zx?useUnicode=true&amp;autoReconnect=true&amp;characterEncoding=UTF8
datasource.username=gitv_rd
datasource.password=1234.gitv_rd
datasource.driver-class-name=com.mysql.jdbc.Driver
datasource.maxActive=1000
datasource.initSize=0
datasource.minIdle=1
# 等待时间 启用公平锁 并发效率会下降
datasource.maxWait=3000
# 启动非公平锁
datasource.useUnfairLock=true
# 是否开启PSCache
datasource.poolPreparedStatements=false
# 检测链接是否有效
datasource.validationQuery=select 1 from dual;
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
datasource.testOnReturn=false
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
datasource.testWhileIdle=false



